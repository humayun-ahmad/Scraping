{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "import csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = 'https://www.bestreviews.guide/categories'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "header =  {'User-Agent': 'Mozilla/5.0 (Windows NT x.y; Win64; x64; rv:10.0) Gecko/20100101 Firefox/10.0 '}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_categories_name = []\n",
    "sub_categories_name = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "header =  {'User-Agent': 'Mozilla/5.0 (Windows NT x.y; Win64; x64; rv:10.0) Gecko/20100101 Firefox/10.0 '}\n",
    "\n",
    "res = requests.get(url,headers=header)\n",
    "soup = BeautifulSoup(res.text,'lxml')\n",
    "\n",
    "# all categories_link link here:\n",
    "categories_link = soup.find_all('a', class_='main_categories__title__container')\n",
    "\n",
    "# all categories title here:\n",
    "main_categories__title = soup.find_all('h3' , class_='main_categories__title')\n",
    "# print(main_categories__title)\n",
    "f = open('title1.txt','a')\n",
    "for one_title in main_categories__title:\n",
    "    one_title_string = one_title.text.lstrip().rstrip()\n",
    "#     print(one_title_string.count('\\n'))\n",
    "#     break\n",
    "#     f.write(one_title_string)\n",
    "    all_categories_name.append(one_title_string)\n",
    "\n",
    "# print(all_categories_name)\n",
    "\n",
    "# all_categories_name write in csv file:\n",
    "'''\n",
    "with open('sample1.csv','w',encoding='utf-8') as f:\n",
    "    writer = csv.writer(f)\n",
    "    writer.writerow(all_categories_name)\n",
    "''' \n",
    "\n",
    "#    \n",
    "\n",
    "# one by one categories_link browes here:\n",
    "for one in categories_link:\n",
    "    main_link = 'https://www.bestreviews.guide'\n",
    "    full_categories_link = main_link + one['href']\n",
    "#     print(two.text)\n",
    "    after_categories_res = requests.get(full_categories_link,headers=header)\n",
    "    after_categories_soup = BeautifulSoup(after_categories_res.text,'lxml')\n",
    "\n",
    "    # all sub_categories_link link here:\n",
    "    sub_categories_link = after_categories_soup.find_all('a',class_='gray_box_layout')\n",
    "    for one_sub in sub_categories_link:\n",
    "        sub_categories_name.append(one_sub.text)\n",
    "    print(sub_categories_name)\n",
    "\n",
    "    # each_sub_categories link browes here:\n",
    "    for sub_one in sub_categories_link:\n",
    "        full_sub_categories_link = main_link + sub_one['href']\n",
    "\n",
    "        each_product_res = requests.get(full_sub_categories_link,headers=header)\n",
    "        each_product_soup = BeautifulSoup(each_product_res.text,'lxml')\n",
    "\n",
    "        # find title_container tag here:\n",
    "        title_container = each_product_soup.find_all('div',class_='gray_box_layout--txt')\n",
    "\n",
    "        # for loop print the title from title_container:\n",
    "        for title in title_container:\n",
    "\n",
    "            print(title.text.strip().lstrip().rstrip())\n",
    "#             f.write(title.text.strip().lstrip().rstrip())\n",
    "            \n",
    "\n",
    "#             break\n",
    "\n",
    "        # print(title)\n",
    "\n",
    "#         break\n",
    "\n",
    "#     break\n",
    "\n",
    "    # after_categories\n",
    "\n",
    "    # print(full_categories_link)\t\n",
    "\n",
    "# print(categories_link)\n",
    "\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
